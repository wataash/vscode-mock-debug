{
	"name": "mock-debug",
	"displayName": "Mock Debug",
	"version": "0.26.0",
	"publisher": "andreweinand",
	"description": "Starter extension for developing debug adapters for VS Code.",
	"author": {
		"name": "Microsoft Corporation",
		"email": "aweinand@microsoft.com"
	},
	"license": "MIT",
	"keywords": [
		"multi-root ready"
	],
	"engines": {
		"vscode": "^1.18.0",
		"node": "^7.9.0"
	},
	"icon": "images/mock-debug-icon.png",
	"categories": [
		"Debuggers"
	],
	"private": true,
	"repository": {
		"type": "git",
		"url": "https://github.com/Microsoft/vscode-mock-debug.git"
	},
	"bugs": {
		"url": "https://github.com/Microsoft/vscode-mock-debug/issues"
	},
	"dependencies": {
		"vscode-debugprotocol": "1.25.0",
		"vscode-debugadapter": "1.25.0"
	},
	"devDependencies": {
		"@types/node": "7.0.43",
		"@types/mocha": "2.2.45",
		"typescript": "2.6.2",
		"mocha": "4.0.1",
		"vscode": "1.1.10",
		"vscode-debugadapter-testsupport": "1.25.0",
		"tslint": "5.8.0",
		"vsce": "1.35.0"
	},
	"scripts": {
		"prepublish": "tsc -p ./src",
		"compile": "tsc -p ./src",
		"tslint": "tslint ./src/**/*.ts",
		"watch": "tsc -w -p ./src",
		"test": "mocha -u tdd ./out/tests/",
		"postinstall": "node ./node_modules/vscode/bin/install",
		"package": "vsce package",
		"publish": "vsce publish"
	},
	"main": "./out/extension",
	"// https://code.visualstudio.com/docs/extensionAPI/activation-events": "",
	"activationEvents": [
		"// activate() called when F5 pressed. Note that `Mock Debug` is not selected yet.",
		"onDebug",
		"// Substantially no meaning, since activate is called atmost one time, and already called by 'onDebug'.",
		"onCommand:extension.mock-debug.getProgramName"
	],
	"contributes": {
		"breakpoints": [
			{
				"language": "markdown"
			}
		],
		"debuggers": [
			{
				"// type": "identifier",
				"type": "mock",
				"label": "Mock Debug",
				"program": "./out/mockDebug.js",
				"runtime": "node",
				"configurationAttributes": {
					"launch": {
						"// No meaning? extension.ts can be loaded even if `program` omitted in launch.json.": "",
						"required": [
							"program"
						],
						"properties": {
							"//": {
								"type": "string",
								"description": "completions in launch.json",
								"default": "default value"
							},
							"program": {
								"type": "string",
								"description": "Absolute path to a text file.",
								"default": "${workspaceFolder}/${command:AskForProgramName}"
							},
							"stopOnEntry": {
								"type": "boolean",
								"description": "Automatically stop after launch.",
								"default": true
							},
							"trace": {
								"type": "boolean",
								"description": "Enable logging of the Debug Adapter Protocol.",
								"default": true
							}
						}
					}
				},
				"// Template for initial launch.json": null,
				"// Added when launch.json is missing && (Add configuration... (in debug pane) -> Mock Debug || >Debug: Open launch.json -> Mock Debug || >Debug: Start Debugging -> Mock Debug, when opening a non-markdown file)": null,
				"initialConfigurations": [
					{
						"type": "mock",
						"request": "launch",
						"name": "Ask for file name",
						"program": "${workspaceFolder}/${command:AskForProgramName}",
						"stopOnEntry": true
					}
				],
				"// Added when select 'Add configuration...' -> 'Mock Debug' in debug pane": null,
				"configurationSnippets": [
					{
						"label": "Mock Debug: Launch",
						"description": "A new configuration for 'debugging' a user selected markdown file.",
						"body": {
							"type": "mock",
							"request": "launch",
							"name": "Ask for file name",
							"program": "^\"\\${workspaceFolder}/\\${command:AskForProgramName}\"",
							"stopOnEntry": true
						}
					}
				],
				"// Affects registerCommand()": "",
				"variables": {
					"// Maps `${command:AskForProgramName}` to `extension.mock-debug.getProgramName`": "",
					"AskForProgramName": "extension.mock-debug.getProgramName",
					"foo": "bar"
				}
			}
		]
	}
}
